{"ast":null,"code":"import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport { fetchMedia } from './api';\nimport { mediaList } from './thunks';\nconst mediaSlice = createSlice({\n  name: 'media',\n  initialState: {\n    mediaList: [],\n    loading: false\n  },\n  reducers: {\n    updateMediaOrder(state, action) {\n      state.mediaList = action.payload; // Update media list order locally\n    }\n  },\n  extraReducers: builder => {\n    builder.addCase(mediaList.pending, state => {\n      state.loading = true;\n    }).addCase(mediaList.fulfilled, (state, action) => {\n      state.mediaList = action.payload;\n      state.loading = false;\n    }).addCase(mediaList.rejected, (state, action) => {\n      state.loading = false;\n      state.error = action.payload;\n    });\n  }\n});\nexport const {\n  updateMediaOrder\n} = mediaSlice.actions;\nexport default mediaSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","fetchMedia","mediaList","mediaSlice","name","initialState","loading","reducers","updateMediaOrder","state","action","payload","extraReducers","builder","addCase","pending","fulfilled","rejected","error","actions","reducer"],"sources":["/Users/adeelakram/Documents/projects/freelance/herogramtest/frontend/src/modules/mediaFiles/ducks/slice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport { fetchMedia } from './api';\nimport { mediaList } from './thunks';\n\nconst mediaSlice = createSlice({\n  name: 'media',\n  initialState: { mediaList: [], loading: false },\n  reducers: {\n    updateMediaOrder(state, action) {\n      state.mediaList = action.payload; // Update media list order locally\n    },\n  },\n  extraReducers: (builder) => {\n    builder\n      .addCase(mediaList.pending, (state) => {\n        state.loading = true;\n      })\n      .addCase(mediaList.fulfilled, (state, action) => {\n        state.mediaList = action.payload;\n        state.loading = false;\n      })\n      .addCase(mediaList.rejected, (state, action) => {\n        state.loading = false;\n        state.error = action.payload;\n      });\n  },\n});\n\nexport const { updateMediaOrder } = mediaSlice.actions;\nexport default mediaSlice.reducer;\n"],"mappings":"AAAA,SAASA,WAAW,EAAEC,gBAAgB,QAAQ,kBAAkB;AAChE,SAASC,UAAU,QAAQ,OAAO;AAClC,SAASC,SAAS,QAAQ,UAAU;AAEpC,MAAMC,UAAU,GAAGJ,WAAW,CAAC;EAC7BK,IAAI,EAAE,OAAO;EACbC,YAAY,EAAE;IAAEH,SAAS,EAAE,EAAE;IAAEI,OAAO,EAAE;EAAM,CAAC;EAC/CC,QAAQ,EAAE;IACRC,gBAAgBA,CAACC,KAAK,EAAEC,MAAM,EAAE;MAC9BD,KAAK,CAACP,SAAS,GAAGQ,MAAM,CAACC,OAAO,CAAC,CAAC;IACpC;EACF,CAAC;EACDC,aAAa,EAAGC,OAAO,IAAK;IAC1BA,OAAO,CACJC,OAAO,CAACZ,SAAS,CAACa,OAAO,EAAGN,KAAK,IAAK;MACrCA,KAAK,CAACH,OAAO,GAAG,IAAI;IACtB,CAAC,CAAC,CACDQ,OAAO,CAACZ,SAAS,CAACc,SAAS,EAAE,CAACP,KAAK,EAAEC,MAAM,KAAK;MAC/CD,KAAK,CAACP,SAAS,GAAGQ,MAAM,CAACC,OAAO;MAChCF,KAAK,CAACH,OAAO,GAAG,KAAK;IACvB,CAAC,CAAC,CACDQ,OAAO,CAACZ,SAAS,CAACe,QAAQ,EAAE,CAACR,KAAK,EAAEC,MAAM,KAAK;MAC9CD,KAAK,CAACH,OAAO,GAAG,KAAK;MACrBG,KAAK,CAACS,KAAK,GAAGR,MAAM,CAACC,OAAO;IAC9B,CAAC,CAAC;EACN;AACF,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEH;AAAiB,CAAC,GAAGL,UAAU,CAACgB,OAAO;AACtD,eAAehB,UAAU,CAACiB,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}