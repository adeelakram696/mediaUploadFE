{"ast":null,"code":"var _jsxFileName = \"/Users/adeelakram/Documents/projects/freelance/herogramtest/frontend/src/modules/mediaFiles/Media.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Button, Form, Input, Upload, List, Tag } from 'antd';\nimport { UploadOutlined } from '@ant-design/icons';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport axiosInstance from '../../config/axiosConfig';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MediaPage = () => {\n  _s();\n  const [mediaList, setMediaList] = useState([]);\n  const [loading, setLoading] = useState(false);\n\n  // Fetch media list from the server\n  const fetchMediaList = async () => {\n    setLoading(true);\n    try {\n      const {\n        data\n      } = await axiosInstance.get('/files');\n      setMediaList(data);\n    } catch (error) {\n      console.error('Error fetching media:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Handle file upload\n  const handleUpload = async values => {\n    const formData = new FormData();\n    formData.append('file', values.file.file.originFileObj);\n    formData.append('tags', values.tags);\n    try {\n      await axiosInstance.post('/files/upload', formData);\n      fetchMediaList(); // Refresh the media list\n    } catch (error) {\n      console.error('Error uploading media:', error);\n    }\n  };\n\n  // Handle drag-and-drop reordering\n  const handleDragEnd = async result => {\n    if (!result.destination) return; // Ignore if dropped outside\n\n    const items = Array.from(mediaList);\n    const [reorderedItem] = items.splice(result.source.index, 1);\n    items.splice(result.destination.index, 0, reorderedItem);\n    setMediaList(items); // Update the UI\n\n    // Optionally update the backend with the new order\n    try {\n      await axiosInstance.post('/files/reorder', {\n        order: items.map(item => item.id)\n      });\n    } catch (error) {\n      console.error('Error updating media order:', error);\n    }\n  };\n  useEffect(() => {\n    fetchMediaList();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      maxWidth: 800,\n      margin: '0 auto',\n      padding: '20px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Media Management\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      layout: \"vertical\",\n      onFinish: handleUpload,\n      children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n        name: \"file\",\n        label: \"Upload Media\",\n        valuePropName: \"file\",\n        rules: [{\n          required: true,\n          message: 'Please upload a media file'\n        }],\n        children: /*#__PURE__*/_jsxDEV(Upload, {\n          beforeUpload: () => false,\n          maxCount: 1,\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            icon: /*#__PURE__*/_jsxDEV(UploadOutlined, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 27\n            }, this),\n            children: \"Select File\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n        name: \"tags\",\n        label: \"Tags\",\n        rules: [{\n          required: true,\n          message: 'Please add tags'\n        }],\n        children: /*#__PURE__*/_jsxDEV(Input, {\n          placeholder: \"Enter comma-separated tags\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          type: \"primary\",\n          htmlType: \"submit\",\n          children: \"Upload\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DragDropContext, {\n      onDragEnd: handleDragEnd,\n      children: /*#__PURE__*/_jsxDEV(Droppable, {\n        droppableId: \"media-list\",\n        children: provided => /*#__PURE__*/_jsxDEV(List, {\n          ...provided.droppableProps,\n          ref: provided.innerRef,\n          loading: loading,\n          dataSource: mediaList,\n          renderItem: (item, index) => /*#__PURE__*/_jsxDEV(Draggable, {\n            draggableId: item.id.toString(),\n            index: index,\n            children: provided => /*#__PURE__*/_jsxDEV(List.Item, {\n              ref: provided.innerRef,\n              ...provided.draggableProps,\n              ...provided.dragHandleProps,\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  display: 'flex',\n                  flexDirection: 'column'\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: item.filename\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 104,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: item.tags.split(',').map((tag, i) => /*#__PURE__*/_jsxDEV(Tag, {\n                    children: tag.trim()\n                  }, i, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 107,\n                    columnNumber: 29\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 105,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 103,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 21\n            }, this)\n          }, item.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 17\n          }, this),\n          children: provided.placeholder\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n};\n_s(MediaPage, \"pqOmRyfRl+40shx4FsvxbT6pd+Q=\");\n_c = MediaPage;\nexport default MediaPage;\nvar _c;\n$RefreshReg$(_c, \"MediaPage\");","map":{"version":3,"names":["React","useState","useEffect","Button","Form","Input","Upload","List","Tag","UploadOutlined","DragDropContext","Droppable","Draggable","axiosInstance","jsxDEV","_jsxDEV","MediaPage","_s","mediaList","setMediaList","loading","setLoading","fetchMediaList","data","get","error","console","handleUpload","values","formData","FormData","append","file","originFileObj","tags","post","handleDragEnd","result","destination","items","Array","from","reorderedItem","splice","source","index","order","map","item","id","style","maxWidth","margin","padding","children","fileName","_jsxFileName","lineNumber","columnNumber","layout","onFinish","Item","name","label","valuePropName","rules","required","message","beforeUpload","maxCount","icon","placeholder","type","htmlType","onDragEnd","droppableId","provided","droppableProps","ref","innerRef","dataSource","renderItem","draggableId","toString","draggableProps","dragHandleProps","display","flexDirection","filename","split","tag","i","trim","_c","$RefreshReg$"],"sources":["/Users/adeelakram/Documents/projects/freelance/herogramtest/frontend/src/modules/mediaFiles/Media.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Button, Form, Input, Upload, List, Tag } from 'antd';\nimport { UploadOutlined } from '@ant-design/icons';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport axiosInstance from '../../config/axiosConfig';\n\nconst MediaPage = () => {\n  const [mediaList, setMediaList] = useState([]);\n  const [loading, setLoading] = useState(false);\n\n  // Fetch media list from the server\n  const fetchMediaList = async () => {\n    setLoading(true);\n    try {\n      const { data } = await axiosInstance.get('/files');\n      setMediaList(data);\n    } catch (error) {\n      console.error('Error fetching media:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Handle file upload\n  const handleUpload = async (values) => {\n    const formData = new FormData();\n    formData.append('file', values.file.file.originFileObj);\n    formData.append('tags', values.tags);\n\n    try {\n      await axiosInstance.post('/files/upload', formData);\n      fetchMediaList(); // Refresh the media list\n    } catch (error) {\n      console.error('Error uploading media:', error);\n    }\n  };\n\n  // Handle drag-and-drop reordering\n  const handleDragEnd = async (result) => {\n    if (!result.destination) return; // Ignore if dropped outside\n\n    const items = Array.from(mediaList);\n    const [reorderedItem] = items.splice(result.source.index, 1);\n    items.splice(result.destination.index, 0, reorderedItem);\n\n    setMediaList(items); // Update the UI\n\n    // Optionally update the backend with the new order\n    try {\n      await axiosInstance.post('/files/reorder', { order: items.map((item) => item.id) });\n    } catch (error) {\n      console.error('Error updating media order:', error);\n    }\n  };\n\n  useEffect(() => {\n    fetchMediaList();\n  }, []);\n\n  return (\n    <div style={{ maxWidth: 800, margin: '0 auto', padding: '20px' }}>\n      <h2>Media Management</h2>\n\n      {/* Upload Form */}\n      <Form layout=\"vertical\" onFinish={handleUpload}>\n        <Form.Item\n          name=\"file\"\n          label=\"Upload Media\"\n          valuePropName=\"file\"\n          rules={[{ required: true, message: 'Please upload a media file' }]}\n        >\n          <Upload beforeUpload={() => false} maxCount={1}>\n            <Button icon={<UploadOutlined />}>Select File</Button>\n          </Upload>\n        </Form.Item>\n        <Form.Item name=\"tags\" label=\"Tags\" rules={[{ required: true, message: 'Please add tags' }]}>\n          <Input placeholder=\"Enter comma-separated tags\" />\n        </Form.Item>\n        <Form.Item>\n          <Button type=\"primary\" htmlType=\"submit\">\n            Upload\n          </Button>\n        </Form.Item>\n      </Form>\n\n      {/* Media List */}\n      <DragDropContext onDragEnd={handleDragEnd}>\n        <Droppable droppableId=\"media-list\">\n          {(provided) => (\n            <List\n              {...provided.droppableProps}\n              ref={provided.innerRef}\n              loading={loading}\n              dataSource={mediaList}\n              renderItem={(item, index) => (\n                <Draggable key={item.id} draggableId={item.id.toString()} index={index}>\n                  {(provided) => (\n                    <List.Item\n                      ref={provided.innerRef}\n                      {...provided.draggableProps}\n                      {...provided.dragHandleProps}\n                    >\n                      <div style={{ display: 'flex', flexDirection: 'column' }}>\n                        <strong>{item.filename}</strong>\n                        <div>\n                          {item.tags.split(',').map((tag, i) => (\n                            <Tag key={i}>{tag.trim()}</Tag>\n                          ))}\n                        </div>\n                      </div>\n                    </List.Item>\n                  )}\n                </Draggable>\n              )}\n            >\n              {provided.placeholder}\n            </List>\n          )}\n        </Droppable>\n      </DragDropContext>\n    </div>\n  );\n};\n\nexport default MediaPage;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,MAAM,EAAEC,IAAI,EAAEC,KAAK,EAAEC,MAAM,EAAEC,IAAI,EAAEC,GAAG,QAAQ,MAAM;AAC7D,SAASC,cAAc,QAAQ,mBAAmB;AAClD,SAASC,eAAe,EAAEC,SAAS,EAAEC,SAAS,QAAQ,qBAAqB;AAC3E,OAAOC,aAAa,MAAM,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErD,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGlB,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACmB,OAAO,EAAEC,UAAU,CAAC,GAAGpB,QAAQ,CAAC,KAAK,CAAC;;EAE7C;EACA,MAAMqB,cAAc,GAAG,MAAAA,CAAA,KAAY;IACjCD,UAAU,CAAC,IAAI,CAAC;IAChB,IAAI;MACF,MAAM;QAAEE;MAAK,CAAC,GAAG,MAAMV,aAAa,CAACW,GAAG,CAAC,QAAQ,CAAC;MAClDL,YAAY,CAACI,IAAI,CAAC;IACpB,CAAC,CAAC,OAAOE,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;IAC/C,CAAC,SAAS;MACRJ,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;;EAED;EACA,MAAMM,YAAY,GAAG,MAAOC,MAAM,IAAK;IACrC,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;IAC/BD,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAEH,MAAM,CAACI,IAAI,CAACA,IAAI,CAACC,aAAa,CAAC;IACvDJ,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAEH,MAAM,CAACM,IAAI,CAAC;IAEpC,IAAI;MACF,MAAMrB,aAAa,CAACsB,IAAI,CAAC,eAAe,EAAEN,QAAQ,CAAC;MACnDP,cAAc,CAAC,CAAC,CAAC,CAAC;IACpB,CAAC,CAAC,OAAOG,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;IAChD;EACF,CAAC;;EAED;EACA,MAAMW,aAAa,GAAG,MAAOC,MAAM,IAAK;IACtC,IAAI,CAACA,MAAM,CAACC,WAAW,EAAE,OAAO,CAAC;;IAEjC,MAAMC,KAAK,GAAGC,KAAK,CAACC,IAAI,CAACvB,SAAS,CAAC;IACnC,MAAM,CAACwB,aAAa,CAAC,GAAGH,KAAK,CAACI,MAAM,CAACN,MAAM,CAACO,MAAM,CAACC,KAAK,EAAE,CAAC,CAAC;IAC5DN,KAAK,CAACI,MAAM,CAACN,MAAM,CAACC,WAAW,CAACO,KAAK,EAAE,CAAC,EAAEH,aAAa,CAAC;IAExDvB,YAAY,CAACoB,KAAK,CAAC,CAAC,CAAC;;IAErB;IACA,IAAI;MACF,MAAM1B,aAAa,CAACsB,IAAI,CAAC,gBAAgB,EAAE;QAAEW,KAAK,EAAEP,KAAK,CAACQ,GAAG,CAAEC,IAAI,IAAKA,IAAI,CAACC,EAAE;MAAE,CAAC,CAAC;IACrF,CAAC,CAAC,OAAOxB,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;IACrD;EACF,CAAC;EAEDvB,SAAS,CAAC,MAAM;IACdoB,cAAc,CAAC,CAAC;EAClB,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEP,OAAA;IAAKmC,KAAK,EAAE;MAAEC,QAAQ,EAAE,GAAG;MAAEC,MAAM,EAAE,QAAQ;MAAEC,OAAO,EAAE;IAAO,CAAE;IAAAC,QAAA,gBAC/DvC,OAAA;MAAAuC,QAAA,EAAI;IAAgB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAGzB3C,OAAA,CAACX,IAAI;MAACuD,MAAM,EAAC,UAAU;MAACC,QAAQ,EAAEjC,YAAa;MAAA2B,QAAA,gBAC7CvC,OAAA,CAACX,IAAI,CAACyD,IAAI;QACRC,IAAI,EAAC,MAAM;QACXC,KAAK,EAAC,cAAc;QACpBC,aAAa,EAAC,MAAM;QACpBC,KAAK,EAAE,CAAC;UAAEC,QAAQ,EAAE,IAAI;UAAEC,OAAO,EAAE;QAA6B,CAAC,CAAE;QAAAb,QAAA,eAEnEvC,OAAA,CAACT,MAAM;UAAC8D,YAAY,EAAEA,CAAA,KAAM,KAAM;UAACC,QAAQ,EAAE,CAAE;UAAAf,QAAA,eAC7CvC,OAAA,CAACZ,MAAM;YAACmE,IAAI,eAAEvD,OAAA,CAACN,cAAc;cAAA8C,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAE;YAAAJ,QAAA,EAAC;UAAW;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAChD;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA,CAAC,eACZ3C,OAAA,CAACX,IAAI,CAACyD,IAAI;QAACC,IAAI,EAAC,MAAM;QAACC,KAAK,EAAC,MAAM;QAACE,KAAK,EAAE,CAAC;UAAEC,QAAQ,EAAE,IAAI;UAAEC,OAAO,EAAE;QAAkB,CAAC,CAAE;QAAAb,QAAA,eAC1FvC,OAAA,CAACV,KAAK;UAACkE,WAAW,EAAC;QAA4B;UAAAhB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACzC,CAAC,eACZ3C,OAAA,CAACX,IAAI,CAACyD,IAAI;QAAAP,QAAA,eACRvC,OAAA,CAACZ,MAAM;UAACqE,IAAI,EAAC,SAAS;UAACC,QAAQ,EAAC,QAAQ;UAAAnB,QAAA,EAAC;QAEzC;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACR,CAAC,eAGP3C,OAAA,CAACL,eAAe;MAACgE,SAAS,EAAEtC,aAAc;MAAAkB,QAAA,eACxCvC,OAAA,CAACJ,SAAS;QAACgE,WAAW,EAAC,YAAY;QAAArB,QAAA,EAC/BsB,QAAQ,iBACR7D,OAAA,CAACR,IAAI;UAAA,GACCqE,QAAQ,CAACC,cAAc;UAC3BC,GAAG,EAAEF,QAAQ,CAACG,QAAS;UACvB3D,OAAO,EAAEA,OAAQ;UACjB4D,UAAU,EAAE9D,SAAU;UACtB+D,UAAU,EAAEA,CAACjC,IAAI,EAAEH,KAAK,kBACtB9B,OAAA,CAACH,SAAS;YAAesE,WAAW,EAAElC,IAAI,CAACC,EAAE,CAACkC,QAAQ,CAAC,CAAE;YAACtC,KAAK,EAAEA,KAAM;YAAAS,QAAA,EACnEsB,QAAQ,iBACR7D,OAAA,CAACR,IAAI,CAACsD,IAAI;cACRiB,GAAG,EAAEF,QAAQ,CAACG,QAAS;cAAA,GACnBH,QAAQ,CAACQ,cAAc;cAAA,GACvBR,QAAQ,CAACS,eAAe;cAAA/B,QAAA,eAE5BvC,OAAA;gBAAKmC,KAAK,EAAE;kBAAEoC,OAAO,EAAE,MAAM;kBAAEC,aAAa,EAAE;gBAAS,CAAE;gBAAAjC,QAAA,gBACvDvC,OAAA;kBAAAuC,QAAA,EAASN,IAAI,CAACwC;gBAAQ;kBAAAjC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAS,CAAC,eAChC3C,OAAA;kBAAAuC,QAAA,EACGN,IAAI,CAACd,IAAI,CAACuD,KAAK,CAAC,GAAG,CAAC,CAAC1C,GAAG,CAAC,CAAC2C,GAAG,EAAEC,CAAC,kBAC/B5E,OAAA,CAACP,GAAG;oBAAA8C,QAAA,EAAUoC,GAAG,CAACE,IAAI,CAAC;kBAAC,GAAdD,CAAC;oBAAApC,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAmB,CAC/B;gBAAC;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACC,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACH;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACG;UACZ,GAhBaV,IAAI,CAACC,EAAE;YAAAM,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAiBZ,CACX;UAAAJ,QAAA,EAEDsB,QAAQ,CAACL;QAAW;UAAAhB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACjB;MACP;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACQ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACG,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACf,CAAC;AAEV,CAAC;AAACzC,EAAA,CApHID,SAAS;AAAA6E,EAAA,GAAT7E,SAAS;AAsHf,eAAeA,SAAS;AAAC,IAAA6E,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}