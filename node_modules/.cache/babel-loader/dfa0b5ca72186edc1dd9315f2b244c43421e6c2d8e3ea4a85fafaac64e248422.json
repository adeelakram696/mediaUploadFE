{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nimport { loginUser } from './thunks';\nconst authSlice = createSlice({\n  name: 'auth',\n  initialState: {\n    token: null,\n    error: null,\n    loading: false\n  },\n  reducers: {\n    logout(state) {\n      state.token = null;\n      localStorage.removeItem('token');\n    }\n  },\n  extraReducers: builder => {\n    builder.addCase(loginUser.pending, state => {\n      state.loading = true;\n      state.error = null;\n    }).addCase(loginUser.fulfilled, (state, action) => {\n      state.loading = false;\n      state.token = action.payload.token; // Assuming the API response has a `token` field\n      localStorage.setItem('token', action.payload.token);\n    }).addCase(loginUser.rejected, (state, action) => {\n      state.loading = false;\n      state.error = action.payload;\n    });\n  }\n});\nexport const {\n  logout\n} = authSlice.actions;\nexport default authSlice.reducer;","map":{"version":3,"names":["createSlice","loginUser","authSlice","name","initialState","token","error","loading","reducers","logout","state","localStorage","removeItem","extraReducers","builder","addCase","pending","fulfilled","action","payload","setItem","rejected","actions","reducer"],"sources":["/Users/adeelakram/Documents/projects/freelance/herogramtest/frontend/src/modules/auth/ducks/slice.js"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\nimport { loginUser } from './thunks';\n\n\nconst authSlice = createSlice({\n  name: 'auth',\n  initialState: {\n    token: null,\n    error: null,\n    loading: false,\n  },\n  reducers: {\n    logout(state) {\n      state.token = null;\n      localStorage.removeItem('token');\n    },\n  },\n  extraReducers: (builder) => {\n    builder\n      .addCase(loginUser.pending, (state) => {\n        state.loading = true;\n        state.error = null;\n      })\n      .addCase(loginUser.fulfilled, (state, action) => {\n        state.loading = false;\n        state.token = action.payload.token; // Assuming the API response has a `token` field\n        localStorage.setItem('token', action.payload.token);\n      })\n      .addCase(loginUser.rejected, (state, action) => {\n        state.loading = false;\n        state.error = action.payload;\n      });\n  },\n});\n\nexport const { logout } = authSlice.actions;\nexport default authSlice.reducer;\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,SAAS,QAAQ,UAAU;AAGpC,MAAMC,SAAS,GAAGF,WAAW,CAAC;EAC5BG,IAAI,EAAE,MAAM;EACZC,YAAY,EAAE;IACZC,KAAK,EAAE,IAAI;IACXC,KAAK,EAAE,IAAI;IACXC,OAAO,EAAE;EACX,CAAC;EACDC,QAAQ,EAAE;IACRC,MAAMA,CAACC,KAAK,EAAE;MACZA,KAAK,CAACL,KAAK,GAAG,IAAI;MAClBM,YAAY,CAACC,UAAU,CAAC,OAAO,CAAC;IAClC;EACF,CAAC;EACDC,aAAa,EAAGC,OAAO,IAAK;IAC1BA,OAAO,CACJC,OAAO,CAACd,SAAS,CAACe,OAAO,EAAGN,KAAK,IAAK;MACrCA,KAAK,CAACH,OAAO,GAAG,IAAI;MACpBG,KAAK,CAACJ,KAAK,GAAG,IAAI;IACpB,CAAC,CAAC,CACDS,OAAO,CAACd,SAAS,CAACgB,SAAS,EAAE,CAACP,KAAK,EAAEQ,MAAM,KAAK;MAC/CR,KAAK,CAACH,OAAO,GAAG,KAAK;MACrBG,KAAK,CAACL,KAAK,GAAGa,MAAM,CAACC,OAAO,CAACd,KAAK,CAAC,CAAC;MACpCM,YAAY,CAACS,OAAO,CAAC,OAAO,EAAEF,MAAM,CAACC,OAAO,CAACd,KAAK,CAAC;IACrD,CAAC,CAAC,CACDU,OAAO,CAACd,SAAS,CAACoB,QAAQ,EAAE,CAACX,KAAK,EAAEQ,MAAM,KAAK;MAC9CR,KAAK,CAACH,OAAO,GAAG,KAAK;MACrBG,KAAK,CAACJ,KAAK,GAAGY,MAAM,CAACC,OAAO;IAC9B,CAAC,CAAC;EACN;AACF,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEV;AAAO,CAAC,GAAGP,SAAS,CAACoB,OAAO;AAC3C,eAAepB,SAAS,CAACqB,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}