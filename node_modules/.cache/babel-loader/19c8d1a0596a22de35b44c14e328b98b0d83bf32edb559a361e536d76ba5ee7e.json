{"ast":null,"code":"import { createAsyncThunk } from '@reduxjs/toolkit';\nimport { fetchMedia, uploadMedia } from './api';\nexport const mediaList = createAsyncThunk('media/list', async (_, {\n  rejectWithValue\n}) => {\n  try {\n    const response = await fetchMedia();\n    return response.data;\n  } catch (error) {\n    var _error$response;\n    return rejectWithValue(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || 'Failed to fetch media list');\n  }\n});\nexport const mediaUpload = createAsyncThunk('media/upload', async (data, {\n  rejectWithValue\n}) => {\n  try {\n    await uploadMedia(data);\n  } catch (error) {\n    var _error$response2;\n    return rejectWithValue(((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.data) || 'Failed to upload media');\n  }\n});","map":{"version":3,"names":["createAsyncThunk","fetchMedia","uploadMedia","mediaList","_","rejectWithValue","response","data","error","_error$response","mediaUpload","_error$response2"],"sources":["/Users/adeelakram/Documents/projects/freelance/herogramtest/frontend/src/modules/mediaFiles/ducks/thunks.js"],"sourcesContent":["import { createAsyncThunk } from '@reduxjs/toolkit';\nimport { fetchMedia, uploadMedia } from './api';\n\nexport const mediaList = createAsyncThunk('media/list', async (_, { rejectWithValue }) => {\n  try {\n    const response = await fetchMedia();\n    return response.data;\n  } catch (error) {\n    return rejectWithValue(error.response?.data || 'Failed to fetch media list');\n  }\n});\n\nexport const mediaUpload = createAsyncThunk('media/upload', async (data, { rejectWithValue }) => {\n  try {\n    await uploadMedia(data);\n  } catch (error) {\n    return rejectWithValue(error.response?.data || 'Failed to upload media');\n  }\n});\n"],"mappings":"AAAA,SAASA,gBAAgB,QAAQ,kBAAkB;AACnD,SAASC,UAAU,EAAEC,WAAW,QAAQ,OAAO;AAE/C,OAAO,MAAMC,SAAS,GAAGH,gBAAgB,CAAC,YAAY,EAAE,OAAOI,CAAC,EAAE;EAAEC;AAAgB,CAAC,KAAK;EACxF,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAML,UAAU,CAAC,CAAC;IACnC,OAAOK,QAAQ,CAACC,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IAAA,IAAAC,eAAA;IACd,OAAOJ,eAAe,CAAC,EAAAI,eAAA,GAAAD,KAAK,CAACF,QAAQ,cAAAG,eAAA,uBAAdA,eAAA,CAAgBF,IAAI,KAAI,4BAA4B,CAAC;EAC9E;AACF,CAAC,CAAC;AAEF,OAAO,MAAMG,WAAW,GAAGV,gBAAgB,CAAC,cAAc,EAAE,OAAOO,IAAI,EAAE;EAAEF;AAAgB,CAAC,KAAK;EAC/F,IAAI;IACF,MAAMH,WAAW,CAACK,IAAI,CAAC;EACzB,CAAC,CAAC,OAAOC,KAAK,EAAE;IAAA,IAAAG,gBAAA;IACd,OAAON,eAAe,CAAC,EAAAM,gBAAA,GAAAH,KAAK,CAACF,QAAQ,cAAAK,gBAAA,uBAAdA,gBAAA,CAAgBJ,IAAI,KAAI,wBAAwB,CAAC;EAC1E;AACF,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}