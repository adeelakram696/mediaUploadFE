{"ast":null,"code":"import { createAsyncThunk } from \"@reduxjs/toolkit\";\nimport { login, register } from \"./api\";\nexport const loginUser = createAsyncThunk('auth/loginUser', async (credentials, {\n  rejectWithValue\n}) => {\n  try {\n    const response = await login(credentials);\n    return response.data;\n  } catch (error) {\n    var _error$response, _error$response$data;\n    return rejectWithValue(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || 'Login failed');\n  }\n});\nexport const registerUser = createAsyncThunk('auth/registerUser', async (data, {\n  rejectWithValue\n}) => {\n  try {\n    const response = await register(data);\n    return response.data;\n  } catch (error) {\n    var _error$response2, _error$response2$data;\n    console.log(error);\n    return rejectWithValue(((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.message) || 'Registeration failed');\n  }\n});","map":{"version":3,"names":["createAsyncThunk","login","register","loginUser","credentials","rejectWithValue","response","data","error","_error$response","_error$response$data","message","registerUser","_error$response2","_error$response2$data","console","log"],"sources":["/Users/adeelakram/Documents/projects/freelance/herogramtest/frontend/src/modules/auth/ducks/thunks.js"],"sourcesContent":["import { createAsyncThunk } from \"@reduxjs/toolkit\";\nimport { login, register } from \"./api\";\n\nexport const loginUser = createAsyncThunk('auth/loginUser', async (credentials, { rejectWithValue }) => {\n  try {\n    const response = await login(credentials);\n    return response.data;\n  } catch (error) {\n    return rejectWithValue(error.response?.data?.message || 'Login failed');\n  }\n});\nexport const registerUser = createAsyncThunk('auth/registerUser', async (data, { rejectWithValue }) => {\n  try {\n    const response = await register(data);\n    return response.data;\n  } catch (error) {\n    console.log(error);\n    return rejectWithValue(error.response?.data?.message || 'Registeration failed');\n  }\n});\n"],"mappings":"AAAA,SAASA,gBAAgB,QAAQ,kBAAkB;AACnD,SAASC,KAAK,EAAEC,QAAQ,QAAQ,OAAO;AAEvC,OAAO,MAAMC,SAAS,GAAGH,gBAAgB,CAAC,gBAAgB,EAAE,OAAOI,WAAW,EAAE;EAAEC;AAAgB,CAAC,KAAK;EACtG,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAML,KAAK,CAACG,WAAW,CAAC;IACzC,OAAOE,QAAQ,CAACC,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IAAA,IAAAC,eAAA,EAAAC,oBAAA;IACd,OAAOL,eAAe,CAAC,EAAAI,eAAA,GAAAD,KAAK,CAACF,QAAQ,cAAAG,eAAA,wBAAAC,oBAAA,GAAdD,eAAA,CAAgBF,IAAI,cAAAG,oBAAA,uBAApBA,oBAAA,CAAsBC,OAAO,KAAI,cAAc,CAAC;EACzE;AACF,CAAC,CAAC;AACF,OAAO,MAAMC,YAAY,GAAGZ,gBAAgB,CAAC,mBAAmB,EAAE,OAAOO,IAAI,EAAE;EAAEF;AAAgB,CAAC,KAAK;EACrG,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC;IACrC,OAAOD,QAAQ,CAACC,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IAAA,IAAAK,gBAAA,EAAAC,qBAAA;IACdC,OAAO,CAACC,GAAG,CAACR,KAAK,CAAC;IAClB,OAAOH,eAAe,CAAC,EAAAQ,gBAAA,GAAAL,KAAK,CAACF,QAAQ,cAAAO,gBAAA,wBAAAC,qBAAA,GAAdD,gBAAA,CAAgBN,IAAI,cAAAO,qBAAA,uBAApBA,qBAAA,CAAsBH,OAAO,KAAI,sBAAsB,CAAC;EACjF;AACF,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}