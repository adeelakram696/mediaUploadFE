{"ast":null,"code":"import{createSlice}from'@reduxjs/toolkit';import{mediaList,mediaUpload}from'./thunks';const mediaSlice=createSlice({name:'media',initialState:{mediaList:[],loading:false},reducers:{updateMediaOrder(state,action){state.mediaList=action.payload;}},extraReducers:builder=>{builder.addCase(mediaList.pending,state=>{state.loading=true;}).addCase(mediaList.fulfilled,(state,action)=>{state.mediaList=action.payload;state.loading=false;}).addCase(mediaList.rejected,(state,action)=>{state.loading=false;state.error=action.payload;});builder.addCase(mediaUpload.pending,state=>{state.loading=true;}).addCase(mediaUpload.fulfilled,(state,action)=>{state.loading=false;}).addCase(mediaUpload.rejected,(state,action)=>{state.loading=false;state.error=action.payload;});}});export const{updateMediaOrder}=mediaSlice.actions;export default mediaSlice.reducer;","map":{"version":3,"names":["createSlice","mediaList","mediaUpload","mediaSlice","name","initialState","loading","reducers","updateMediaOrder","state","action","payload","extraReducers","builder","addCase","pending","fulfilled","rejected","error","actions","reducer"],"sources":["/Users/adeelakram/Documents/projects/freelance/herogramtest/frontend/src/modules/mediaFiles/ducks/slice.js"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\nimport { mediaList, mediaUpload } from './thunks';\n\nconst mediaSlice = createSlice({\n  name: 'media',\n  initialState: { mediaList: [], loading: false},\n  reducers: {\n    updateMediaOrder(state, action) {\n      state.mediaList = action.payload;\n    },\n  },\n  extraReducers: (builder) => {\n    builder\n      .addCase(mediaList.pending, (state) => {\n        state.loading = true;\n      })\n      .addCase(mediaList.fulfilled, (state, action) => {\n        state.mediaList = action.payload;\n        state.loading = false;\n      })\n      .addCase(mediaList.rejected, (state, action) => {\n        state.loading = false;\n        state.error = action.payload;\n      });\n    builder\n      .addCase(mediaUpload.pending, (state) => {\n        state.loading = true;\n      })\n      .addCase(mediaUpload.fulfilled, (state, action) => {\n        state.loading = false;\n      })\n      .addCase(mediaUpload.rejected, (state, action) => {\n        state.loading = false;\n        state.error = action.payload;\n      });\n  },\n});\n\nexport const { updateMediaOrder } = mediaSlice.actions;\nexport default mediaSlice.reducer;\n"],"mappings":"AAAA,OAASA,WAAW,KAAQ,kBAAkB,CAC9C,OAASC,SAAS,CAAEC,WAAW,KAAQ,UAAU,CAEjD,KAAM,CAAAC,UAAU,CAAGH,WAAW,CAAC,CAC7BI,IAAI,CAAE,OAAO,CACbC,YAAY,CAAE,CAAEJ,SAAS,CAAE,EAAE,CAAEK,OAAO,CAAE,KAAK,CAAC,CAC9CC,QAAQ,CAAE,CACRC,gBAAgBA,CAACC,KAAK,CAAEC,MAAM,CAAE,CAC9BD,KAAK,CAACR,SAAS,CAAGS,MAAM,CAACC,OAAO,CAClC,CACF,CAAC,CACDC,aAAa,CAAGC,OAAO,EAAK,CAC1BA,OAAO,CACJC,OAAO,CAACb,SAAS,CAACc,OAAO,CAAGN,KAAK,EAAK,CACrCA,KAAK,CAACH,OAAO,CAAG,IAAI,CACtB,CAAC,CAAC,CACDQ,OAAO,CAACb,SAAS,CAACe,SAAS,CAAE,CAACP,KAAK,CAAEC,MAAM,GAAK,CAC/CD,KAAK,CAACR,SAAS,CAAGS,MAAM,CAACC,OAAO,CAChCF,KAAK,CAACH,OAAO,CAAG,KAAK,CACvB,CAAC,CAAC,CACDQ,OAAO,CAACb,SAAS,CAACgB,QAAQ,CAAE,CAACR,KAAK,CAAEC,MAAM,GAAK,CAC9CD,KAAK,CAACH,OAAO,CAAG,KAAK,CACrBG,KAAK,CAACS,KAAK,CAAGR,MAAM,CAACC,OAAO,CAC9B,CAAC,CAAC,CACJE,OAAO,CACJC,OAAO,CAACZ,WAAW,CAACa,OAAO,CAAGN,KAAK,EAAK,CACvCA,KAAK,CAACH,OAAO,CAAG,IAAI,CACtB,CAAC,CAAC,CACDQ,OAAO,CAACZ,WAAW,CAACc,SAAS,CAAE,CAACP,KAAK,CAAEC,MAAM,GAAK,CACjDD,KAAK,CAACH,OAAO,CAAG,KAAK,CACvB,CAAC,CAAC,CACDQ,OAAO,CAACZ,WAAW,CAACe,QAAQ,CAAE,CAACR,KAAK,CAAEC,MAAM,GAAK,CAChDD,KAAK,CAACH,OAAO,CAAG,KAAK,CACrBG,KAAK,CAACS,KAAK,CAAGR,MAAM,CAACC,OAAO,CAC9B,CAAC,CAAC,CACN,CACF,CAAC,CAAC,CAEF,MAAO,MAAM,CAAEH,gBAAiB,CAAC,CAAGL,UAAU,CAACgB,OAAO,CACtD,cAAe,CAAAhB,UAAU,CAACiB,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}