{"ast":null,"code":"import{createAsyncThunk}from\"@reduxjs/toolkit\";import{login,register}from\"./api\";export const loginUser=createAsyncThunk('auth/loginUser',async(credentials,_ref)=>{let{rejectWithValue}=_ref;try{const response=await login(credentials);return response.data;}catch(error){var _error$response,_error$response$data;return rejectWithValue(((_error$response=error.response)===null||_error$response===void 0?void 0:(_error$response$data=_error$response.data)===null||_error$response$data===void 0?void 0:_error$response$data.message)||'Login failed');}});export const registerUser=createAsyncThunk('auth/registerUser',async(data,_ref2)=>{let{rejectWithValue}=_ref2;try{const response=await register(data);return response.data;}catch(error){var _error$response2,_error$response2$data;return rejectWithValue(((_error$response2=error.response)===null||_error$response2===void 0?void 0:(_error$response2$data=_error$response2.data)===null||_error$response2$data===void 0?void 0:_error$response2$data.message)||'Registeration failed');}});","map":{"version":3,"names":["createAsyncThunk","login","register","loginUser","credentials","_ref","rejectWithValue","response","data","error","_error$response","_error$response$data","message","registerUser","_ref2","_error$response2","_error$response2$data"],"sources":["/Users/adeelakram/Documents/projects/freelance/mediaUploadFE/src/modules/auth/ducks/thunks.js"],"sourcesContent":["import { createAsyncThunk } from \"@reduxjs/toolkit\";\nimport { login, register } from \"./api\";\n\nexport const loginUser = createAsyncThunk('auth/loginUser', async (credentials, { rejectWithValue }) => {\n  try {\n    const response = await login(credentials);\n    return response.data;\n  } catch (error) {\n    return rejectWithValue(error.response?.data?.message || 'Login failed');\n  }\n});\nexport const registerUser = createAsyncThunk('auth/registerUser', async (data, { rejectWithValue }) => {\n  try {\n    const response = await register(data);\n    return response.data;\n  } catch (error) {\n    return rejectWithValue(error.response?.data?.message || 'Registeration failed');\n  }\n});\n"],"mappings":"AAAA,OAASA,gBAAgB,KAAQ,kBAAkB,CACnD,OAASC,KAAK,CAAEC,QAAQ,KAAQ,OAAO,CAEvC,MAAO,MAAM,CAAAC,SAAS,CAAGH,gBAAgB,CAAC,gBAAgB,CAAE,MAAOI,WAAW,CAAAC,IAAA,GAA0B,IAAxB,CAAEC,eAAgB,CAAC,CAAAD,IAAA,CACjG,GAAI,CACF,KAAM,CAAAE,QAAQ,CAAG,KAAM,CAAAN,KAAK,CAACG,WAAW,CAAC,CACzC,MAAO,CAAAG,QAAQ,CAACC,IAAI,CACtB,CAAE,MAAOC,KAAK,CAAE,KAAAC,eAAA,CAAAC,oBAAA,CACd,MAAO,CAAAL,eAAe,CAAC,EAAAI,eAAA,CAAAD,KAAK,CAACF,QAAQ,UAAAG,eAAA,kBAAAC,oBAAA,CAAdD,eAAA,CAAgBF,IAAI,UAAAG,oBAAA,iBAApBA,oBAAA,CAAsBC,OAAO,GAAI,cAAc,CAAC,CACzE,CACF,CAAC,CAAC,CACF,MAAO,MAAM,CAAAC,YAAY,CAAGb,gBAAgB,CAAC,mBAAmB,CAAE,MAAOQ,IAAI,CAAAM,KAAA,GAA0B,IAAxB,CAAER,eAAgB,CAAC,CAAAQ,KAAA,CAChG,GAAI,CACF,KAAM,CAAAP,QAAQ,CAAG,KAAM,CAAAL,QAAQ,CAACM,IAAI,CAAC,CACrC,MAAO,CAAAD,QAAQ,CAACC,IAAI,CACtB,CAAE,MAAOC,KAAK,CAAE,KAAAM,gBAAA,CAAAC,qBAAA,CACd,MAAO,CAAAV,eAAe,CAAC,EAAAS,gBAAA,CAAAN,KAAK,CAACF,QAAQ,UAAAQ,gBAAA,kBAAAC,qBAAA,CAAdD,gBAAA,CAAgBP,IAAI,UAAAQ,qBAAA,iBAApBA,qBAAA,CAAsBJ,OAAO,GAAI,sBAAsB,CAAC,CACjF,CACF,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}