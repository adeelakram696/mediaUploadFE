{"ast":null,"code":"var _jsxFileName = \"/Users/adeelakram/Documents/projects/freelance/herogramtest/frontend/src/modules/mediaFiles/Media.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Button, Form, Input, Upload, List, Tag, Flex } from 'antd';\nimport { UploadOutlined } from '@ant-design/icons';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport { updateMediaOrder } from './ducks/slice';\nimport { mediaList as mediaThunk } from './ducks/thunks';\nimport axiosInstance from '../../config/axiosConfig';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MediaPage = () => {\n  _s();\n  const dispatch = useDispatch();\n  const {\n    mediaList,\n    loading,\n    error\n  } = useSelector(state => state.media);\n  useEffect(() => {\n    dispatch(mediaThunk());\n  }, [dispatch]);\n  const handleUpload = async values => {\n    if (fileList.length === 0) {\n      console.error('No file selected');\n      return;\n    }\n    const formData = new FormData();\n    formData.append('file', fileList[0].originFileObj); // Use the first file in the fileList\n    formData.append('tags', values.tags);\n    try {\n      await axiosInstance.post('/files/upload', formData);\n      dispatch(mediaThunk()); // Refresh the media list\n    } catch (error) {\n      console.error('Error uploading media:', error);\n    }\n  };\n  const handleDragEnd = result => {\n    if (!result.destination) return;\n    const reorderedItems = Array.from(mediaList);\n    const [movedItem] = reorderedItems.splice(result.source.index, 1);\n    reorderedItems.splice(result.destination.index, 0, movedItem);\n    dispatch(updateMediaOrder(reorderedItems));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      maxWidth: 800,\n      margin: '0 auto',\n      padding: '20px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Media Management\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      layout: \"vertical\",\n      onFinish: handleUpload,\n      children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n        name: \"file\",\n        label: \"Upload Media\",\n        rules: [{\n          required: true,\n          message: 'Please upload a media file'\n        }],\n        children: /*#__PURE__*/_jsxDEV(Upload, {\n          beforeUpload: () => false // Prevent automatic upload\n          ,\n          fileList: fileList // Bind the fileList state\n          ,\n          onChange: handleFileChange // Handle file selection\n          ,\n          maxCount: 1 // Limit to one file\n          ,\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            icon: /*#__PURE__*/_jsxDEV(UploadOutlined, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 27\n            }, this),\n            children: \"Select File\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n        name: \"tags\",\n        label: \"Tags\",\n        rules: [{\n          required: true,\n          message: 'Please add tags'\n        }],\n        children: /*#__PURE__*/_jsxDEV(Input, {\n          placeholder: \"Enter comma-separated tags\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          type: \"primary\",\n          htmlType: \"submit\",\n          children: \"Upload\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'red'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(DragDropContext, {\n      onDragEnd: handleDragEnd,\n      children: /*#__PURE__*/_jsxDEV(Droppable, {\n        droppableId: \"media-list\",\n        children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n          ...provided.droppableProps,\n          ref: provided.innerRef,\n          children: [mediaList.map((item, index) => /*#__PURE__*/_jsxDEV(Draggable, {\n            draggableId: item.id.toString(),\n            index: index,\n            children: provided => {\n              var _item$Tags;\n              return /*#__PURE__*/_jsxDEV(Flex, {\n                ref: provided.innerRef,\n                ...provided.draggableProps,\n                ...provided.dragHandleProps,\n                justify: \"space-between\",\n                children: [/*#__PURE__*/_jsxDEV(Flex, {\n                  children: item.filename\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 97,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(Flex, {\n                  children: (_item$Tags = item.Tags) === null || _item$Tags === void 0 ? void 0 : _item$Tags.map((tag, index) => /*#__PURE__*/_jsxDEV(Tag, {\n                    color: \"blue\",\n                    children: tag === null || tag === void 0 ? void 0 : tag.tag\n                  }, index, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 99,\n                    columnNumber: 27\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 98,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 91,\n                columnNumber: 21\n              }, this);\n            }\n          }, item.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 17\n          }, this)), provided.placeholder]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n_s(MediaPage, \"5EvgzMmMcZb99SeCkMeJtvyWvaA=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c = MediaPage;\nexport default MediaPage;\nvar _c;\n$RefreshReg$(_c, \"MediaPage\");","map":{"version":3,"names":["React","useEffect","useSelector","useDispatch","Button","Form","Input","Upload","List","Tag","Flex","UploadOutlined","DragDropContext","Droppable","Draggable","updateMediaOrder","mediaList","mediaThunk","axiosInstance","jsxDEV","_jsxDEV","MediaPage","_s","dispatch","loading","error","state","media","handleUpload","values","fileList","length","console","formData","FormData","append","originFileObj","tags","post","handleDragEnd","result","destination","reorderedItems","Array","from","movedItem","splice","source","index","style","maxWidth","margin","padding","children","fileName","_jsxFileName","lineNumber","columnNumber","layout","onFinish","Item","name","label","rules","required","message","beforeUpload","onChange","handleFileChange","maxCount","icon","placeholder","type","htmlType","color","onDragEnd","droppableId","provided","droppableProps","ref","innerRef","map","item","draggableId","id","toString","_item$Tags","draggableProps","dragHandleProps","justify","filename","Tags","tag","_c","$RefreshReg$"],"sources":["/Users/adeelakram/Documents/projects/freelance/herogramtest/frontend/src/modules/mediaFiles/Media.js"],"sourcesContent":["import React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Button, Form, Input, Upload, List, Tag, Flex } from 'antd';\nimport { UploadOutlined } from '@ant-design/icons';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport { updateMediaOrder } from './ducks/slice';\nimport { mediaList as mediaThunk } from './ducks/thunks';\nimport axiosInstance from '../../config/axiosConfig';\n\nconst MediaPage = () => {\n  const dispatch = useDispatch();\n  const { mediaList, loading, error } = useSelector((state) => state.media);\n\n  useEffect(() => {\n    dispatch(mediaThunk());\n  }, [dispatch]);\n\n  const handleUpload = async (values) => {\n    if (fileList.length === 0) {\n      console.error('No file selected');\n      return;\n    }\n\n    const formData = new FormData();\n    formData.append('file', fileList[0].originFileObj); // Use the first file in the fileList\n    formData.append('tags', values.tags);\n\n    try {\n      await axiosInstance.post('/files/upload', formData);\n      dispatch(mediaThunk()); // Refresh the media list\n    } catch (error) {\n      console.error('Error uploading media:', error);\n    }\n  };\n\n \n  const handleDragEnd = (result) => {\n    if (!result.destination) return;\n    const reorderedItems = Array.from(mediaList);\n    const [movedItem] = reorderedItems.splice(result.source.index, 1);\n    reorderedItems.splice(result.destination.index, 0, movedItem);\n    dispatch(updateMediaOrder(reorderedItems));\n  };\n\n  return (\n    <div style={{ maxWidth: 800, margin: '0 auto', padding: '20px' }}>\n      <h2>Media Management</h2>\n\n      \n      <Form layout=\"vertical\" onFinish={handleUpload}>\n        <Form.Item\n          name=\"file\"\n          label=\"Upload Media\"\n          rules={[{ required: true, message: 'Please upload a media file' }]}\n        >\n          <Upload\n            beforeUpload={() => false} // Prevent automatic upload\n            fileList={fileList} // Bind the fileList state\n            onChange={handleFileChange} // Handle file selection\n            maxCount={1} // Limit to one file\n          >\n            <Button icon={<UploadOutlined />}>Select File</Button>\n          </Upload>\n        </Form.Item>\n        <Form.Item\n          name=\"tags\"\n          label=\"Tags\"\n          rules={[{ required: true, message: 'Please add tags' }]}\n        >\n          <Input placeholder=\"Enter comma-separated tags\" />\n        </Form.Item>\n        <Form.Item>\n          <Button type=\"primary\" htmlType=\"submit\">\n            Upload\n          </Button>\n        </Form.Item>\n      </Form>\n\n      {error && <p style={{ color: 'red' }}>{error}</p>}\n\n      <DragDropContext onDragEnd={handleDragEnd}>\n        <Droppable droppableId=\"media-list\">\n          {(provided) => (\n            <div\n              {...provided.droppableProps}\n              ref={provided.innerRef}\n            >\n              {mediaList.map((item, index) => (\n                <Draggable key={item.id} draggableId={item.id.toString()} index={index}>\n                  {(provided) => (\n                    <Flex\n                      ref={provided.innerRef}\n                      {...provided.draggableProps}\n                      {...provided.dragHandleProps} \n                      justify='space-between'\n                    >\n                      <Flex>{item.filename}</Flex>\n                      <Flex>{item.Tags?.map((tag, index) => (\n                          <Tag color=\"blue\" key={index}>\n                            {tag?.tag}\n                          </Tag>\n                        ))}</Flex>\n                    </Flex>\n                  )}\n                </Draggable>\n              ))}\n              {provided.placeholder}\n            </div>\n          )}\n        </Droppable>\n      </DragDropContext>\n    </div>\n  );\n};\n\nexport default MediaPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}