{"ast":null,"code":"var _jsxFileName = \"/Users/adeelakram/Documents/projects/freelance/herogramtest/frontend/src/modules/mediaFiles/Media.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Button, Form, Input, Upload, Table } from 'antd';\nimport { UploadOutlined } from '@ant-design/icons';\nimport { DragDropContext, Droppable } from 'react-beautiful-dnd';\nimport { updateMediaOrder } from './ducks/slice';\nimport { mediaList as mediaThunk } from './ducks/thunks';\nimport axiosInstance from '../../config/axiosConfig';\nimport { columns } from './utils/data';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MediaPage = () => {\n  _s();\n  const dispatch = useDispatch();\n  const {\n    mediaList,\n    loading,\n    error\n  } = useSelector(state => state.media);\n\n  // Fetch media list on component mount\n  useEffect(() => {\n    dispatch(mediaThunk());\n  }, [dispatch]);\n\n  // Handle file upload\n  const handleUpload = async values => {\n    const formData = new FormData();\n    formData.append('file', values.file.file.originFileObj);\n    formData.append('tags', values.tags);\n    try {\n      await axiosInstance.post('/files/upload', formData);\n      dispatch(mediaThunk()); // Refresh the media list\n    } catch (error) {\n      console.error('Error uploading media:', error);\n    }\n  };\n\n  // Handle drag-and-drop reordering (frontend-only)\n  const handleDragEnd = result => {\n    if (!result.destination) return; // Ignore if dropped outside\n\n    const reorderedItems = Array.from(mediaList);\n    const [movedItem] = reorderedItems.splice(result.source.index, 1);\n    reorderedItems.splice(result.destination.index, 0, movedItem);\n\n    // Update the media list in Redux (frontend only)\n    dispatch(updateMediaOrder(reorderedItems));\n  };\n  const DraggableBodyRow = ({\n    index,\n    className,\n    style,\n    ...restProps\n  }) => /*#__PURE__*/_jsxDEV(Draggable, {\n    draggableId: mediaList[index].id.toString(),\n    index: index,\n    children: provided => /*#__PURE__*/_jsxDEV(\"tr\", {\n      ref: provided.innerRef,\n      ...provided.draggableProps,\n      ...provided.dragHandleProps,\n      className: className,\n      style: {\n        ...style,\n        ...provided.draggableProps.style\n      },\n      children: restProps.children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      maxWidth: 800,\n      margin: '0 auto',\n      padding: '20px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Media Management\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      layout: \"vertical\",\n      onFinish: handleUpload,\n      children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n        name: \"file\",\n        label: \"Upload Media\",\n        valuePropName: \"file\",\n        rules: [{\n          required: true,\n          message: 'Please upload a media file'\n        }],\n        children: /*#__PURE__*/_jsxDEV(Upload, {\n          beforeUpload: () => false,\n          maxCount: 1,\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            icon: /*#__PURE__*/_jsxDEV(UploadOutlined, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 27\n            }, this),\n            children: \"Select File\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n        name: \"tags\",\n        label: \"Tags\",\n        rules: [{\n          required: true,\n          message: 'Please add tags'\n        }],\n        children: /*#__PURE__*/_jsxDEV(Input, {\n          placeholder: \"Enter comma-separated tags\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          type: \"primary\",\n          htmlType: \"submit\",\n          children: \"Upload\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'red'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(DragDropContext, {\n      onDragEnd: handleDragEnd,\n      children: /*#__PURE__*/_jsxDEV(Droppable, {\n        droppableId: \"table\",\n        direction: \"vertical\",\n        children: provided => /*#__PURE__*/_jsxDEV(Table, {\n          columns: columns,\n          dataSource: mediaList.map(d => ({\n            key: d.id,\n            ...d\n          })),\n          components: {\n            body: {\n              wrapper: props => /*#__PURE__*/_jsxDEV(\"tbody\", {\n                ...provided.droppableProps,\n                ref: provided.innerRef,\n                children: [props.children, provided.placeholder]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 102,\n                columnNumber: 19\n              }, this),\n              row: DraggableBodyRow\n            }\n          },\n          pagination: false // Disable pagination for drag-and-drop\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n};\n_s(MediaPage, \"5EvgzMmMcZb99SeCkMeJtvyWvaA=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c = MediaPage;\nexport default MediaPage;\nvar _c;\n$RefreshReg$(_c, \"MediaPage\");","map":{"version":3,"names":["React","useEffect","useSelector","useDispatch","Button","Form","Input","Upload","Table","UploadOutlined","DragDropContext","Droppable","updateMediaOrder","mediaList","mediaThunk","axiosInstance","columns","jsxDEV","_jsxDEV","MediaPage","_s","dispatch","loading","error","state","media","handleUpload","values","formData","FormData","append","file","originFileObj","tags","post","console","handleDragEnd","result","destination","reorderedItems","Array","from","movedItem","splice","source","index","DraggableBodyRow","className","style","restProps","Draggable","draggableId","id","toString","children","provided","ref","innerRef","draggableProps","dragHandleProps","fileName","_jsxFileName","lineNumber","columnNumber","maxWidth","margin","padding","layout","onFinish","Item","name","label","valuePropName","rules","required","message","beforeUpload","maxCount","icon","placeholder","type","htmlType","color","onDragEnd","droppableId","direction","dataSource","map","d","key","components","body","wrapper","props","droppableProps","row","pagination","_c","$RefreshReg$"],"sources":["/Users/adeelakram/Documents/projects/freelance/herogramtest/frontend/src/modules/mediaFiles/Media.js"],"sourcesContent":["import React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Button, Form, Input, Upload, Table } from 'antd';\nimport { UploadOutlined } from '@ant-design/icons';\nimport { DragDropContext, Droppable } from 'react-beautiful-dnd';\nimport { updateMediaOrder } from './ducks/slice';\nimport { mediaList as mediaThunk } from './ducks/thunks';\nimport axiosInstance from '../../config/axiosConfig';\nimport { columns } from './utils/data';\n\nconst MediaPage = () => {\n  const dispatch = useDispatch();\n  const { mediaList, loading, error } = useSelector((state) => state.media);\n\n  // Fetch media list on component mount\n  useEffect(() => {\n    dispatch(mediaThunk());\n  }, [dispatch]);\n\n  // Handle file upload\n  const handleUpload = async (values) => {\n    const formData = new FormData();\n    formData.append('file', values.file.file.originFileObj);\n    formData.append('tags', values.tags);\n\n    try {\n      await axiosInstance.post('/files/upload', formData);\n      dispatch(mediaThunk()); // Refresh the media list\n    } catch (error) {\n      console.error('Error uploading media:', error);\n    }\n  };\n\n  // Handle drag-and-drop reordering (frontend-only)\n  const handleDragEnd = (result) => {\n    if (!result.destination) return; // Ignore if dropped outside\n\n    const reorderedItems = Array.from(mediaList);\n    const [movedItem] = reorderedItems.splice(result.source.index, 1);\n    reorderedItems.splice(result.destination.index, 0, movedItem);\n\n    // Update the media list in Redux (frontend only)\n    dispatch(updateMediaOrder(reorderedItems));\n  };\n  const DraggableBodyRow = ({ index, className, style, ...restProps }) => (\n    <Draggable draggableId={mediaList[index].id.toString()} index={index}>\n      {(provided) => (\n        <tr\n          ref={provided.innerRef}\n          {...provided.draggableProps}\n          {...provided.dragHandleProps}\n          className={className}\n          style={{\n            ...style,\n            ...provided.draggableProps.style,\n          }}\n        >\n          {restProps.children}\n        </tr>\n      )}\n    </Draggable>\n  );\n  return (\n    <div style={{ maxWidth: 800, margin: '0 auto', padding: '20px' }}>\n      <h2>Media Management</h2>\n\n      {/* Upload Form */}\n      <Form layout=\"vertical\" onFinish={handleUpload}>\n        <Form.Item\n          name=\"file\"\n          label=\"Upload Media\"\n          valuePropName=\"file\"\n          rules={[{ required: true, message: 'Please upload a media file' }]}\n        >\n          <Upload beforeUpload={() => false} maxCount={1}>\n            <Button icon={<UploadOutlined />}>Select File</Button>\n          </Upload>\n        </Form.Item>\n        <Form.Item name=\"tags\" label=\"Tags\" rules={[{ required: true, message: 'Please add tags' }]}>\n          <Input placeholder=\"Enter comma-separated tags\" />\n        </Form.Item>\n        <Form.Item>\n          <Button type=\"primary\" htmlType=\"submit\">\n            Upload\n          </Button>\n        </Form.Item>\n      </Form>\n\n      {/* Error Display */}\n      {error && <p style={{ color: 'red' }}>{error}</p>}\n\n      {/* Media List */}\n      <DragDropContext onDragEnd={handleDragEnd}>\n        <Droppable droppableId=\"table\" direction=\"vertical\">\n          {(provided) => (\n            <Table\n            columns={columns}\n            dataSource={mediaList.map((d) => ({key: d.id, ...d}))}\n            components={{\n              body: {\n                wrapper: (props) => (\n                  <tbody {...provided.droppableProps} ref={provided.innerRef}>\n                    {props.children}\n                    {provided.placeholder}\n                  </tbody>\n                ),\n                row: DraggableBodyRow,\n              },\n            }}\n            pagination={false} // Disable pagination for drag-and-drop\n          />\n          )}\n        </Droppable>\n      </DragDropContext>\n    </div>\n  );\n};\n\nexport default MediaPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}